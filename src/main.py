import os
import telebot
from telebot import types
import requests
import re


bot = telebot.TeleBot('7732064595:AAGdf5mnv1x2YfMNM89IWgfCw5TKNDsZ7z8')

user_data = {}

@bot.message_handler(commands=['start', 'hello'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ê—Ä–∞–±–∏–∫–∞')
    btn2 = types.KeyboardButton('–†–æ–±—É—Å—Ç–∞')
    btn3 = types.KeyboardButton('–°–º–µ—Å—å')
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ BeanStream!!!\n–î–∞–≤–∞–π—Ç–µ –æ—Ñ–æ—Ä–º–∏–º –≤–∞—à—É –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–æ—Ñ–µ.")
    bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ä—Ç –∫–æ—Ñ–µ:", reply_markup=markup)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data[message.chat.id] = {
        'coffeeType': '',
        'coffeeFormat': '',
        'coffeeRate': '',
        'coffeeTime': '',
        'coffeeAddress': '',
        'coffeeCost': 0,
        'awaiting_address': False
    }

@bot.message_handler(func=lambda m: m.text in ["–ê—Ä–∞–±–∏–∫–∞", "–†–æ–±—É—Å—Ç–∞", "–°–º–µ—Å—å"])
def set_coffee_type(message):
    user_data[message.chat.id]['coffeeType'] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–í –∑—ë—Ä–Ω–∞—Ö')
    btn2 = types.KeyboardButton('–ú–æ–ª–æ—Ç—ã–π')
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∫–æ—Ñ–µ:', reply_markup=markup)

@bot.message_handler(func=lambda m: m.text in ["–í –∑—ë—Ä–Ω–∞—Ö", "–ú–æ–ª–æ—Ç—ã–π"])
def set_coffee_format(message):
    user_data[message.chat.id]['coffeeFormat'] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π - 800 —Ä—É–±.')
    btn2 = types.KeyboardButton('–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π - 2700 —Ä—É–±.')
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –ø–æ–¥–ø–∏—Å–∫–∏:', reply_markup=markup)

@bot.message_handler(func=lambda m: m.text in ["–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π - 800 —Ä—É–±.", "–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π - 2700 —Ä—É–±."])
def set_coffee_rate(message):
    if '800' in message.text: user_data[message.chat.id]['coffeeCost'] = 800
    else: user_data[message.chat.id]['coffeeCost'] = 2700
    user_data[message.chat.id]['coffeeRate'] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('10:00')
    btn2 = types.KeyboardButton('12:00')
    btn3 = types.KeyboardButton('14:00')
    btn4 = types.KeyboardButton('16:00')
    btn5 = types.KeyboardButton('18:00')
    btn6 = types.KeyboardButton('20:00')
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
    bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏:', reply_markup=markup)

@bot.message_handler(func=lambda m: m.text in ["10:00", "12:00", "14:00", "16:00", "18:00", "20:00"])
def ask_for_address(message):
    chat_id = message.chat.id
    user_data[chat_id]['coffeeTime'] = message.text
    user_data[chat_id]['awaiting_address'] = True
    remove_markup = types.ReplyKeyboardRemove()
    bot.send_message(chat_id, 'üìç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "/[–∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏]":', reply_markup=remove_markup)


@bot.message_handler(func=lambda m: True)
def handle_all_messages(message):
    chat_id = message.chat.id
    text = message.text.strip()

    if chat_id in user_data and user_data[chat_id].get('awaiting_address'):
        user_data[chat_id]['coffeeAddress'] = text.replace('/','',1)
        user_data[chat_id]['awaiting_address'] = False

        summary = f"""‚òïÔ∏è –í–∞—à –∑–∞–∫–∞–∑:
‚Ä¢ –°–æ—Ä—Ç: <b>{user_data[chat_id]['coffeeType']}</b>
‚Ä¢ –§–æ—Ä–º–∞—Ç: <b>{user_data[chat_id]['coffeeFormat']}</b>
‚Ä¢ –¢–∞—Ä–∏—Ñ: <b>{user_data[chat_id]['coffeeRate']}</b>
‚Ä¢ –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: <b>{user_data[chat_id]['coffeeTime']}</b>
‚Ä¢ –ê–¥—Ä–µ—Å: <b>{user_data[chat_id]['coffeeAddress']}</b>"""

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "–ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å")
        bot.send_message(chat_id, summary, reply_markup=markup, parse_mode="HTML")
        return

    if text == "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å":
        bot.send_message(chat_id, f"‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ BeanStream ‚òïÔ∏è \nüí≥–ö –æ–ø–ª–∞—Ç–µ: <b>{user_data[message.chat.id]['coffeeCost']}</b>‚ÇΩ\n–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:\nhttps://sbp.nspk.ru/", reply_markup=types.ReplyKeyboardRemove(), parse_mode='HTML')
    elif text == "–ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å":
        user_data[chat_id]['awaiting_address'] = True
        bot.send_message(chat_id, 'üìç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "/[–∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏]')
    else:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ –Ω–∞—á–Ω–∏—Ç–µ —Å /start")
    
bot.infinity_polling()